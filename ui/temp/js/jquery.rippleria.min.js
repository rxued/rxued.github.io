!function(t, i, e, o) {
    function n(i, e) {
        this.$element = t(i),
        this.options = t.extend({}, n.Defaults, this._getOptionsFromElementAttributes(), e),
        this._prepare(),
        this._bind()
    }
    n.prototype._bind = function() {
        var n, r, a, s, p, c = this.$element, l = this.options;
        s = "ontouchend" in i || i.DocumentTouch && e instanceof DocumentTouch,
        p = 1 == s ? "touchend.rippleria" : "click.rippleria",
        this.$element.bind(p, function(i) {
           // i.stopPropagation();
            var e = t("<span class='rippleria-ink'></span>");
            if (c.prepend(e),
            l.color != o && e.css("background-color", l.color),
            e.css("animation", "rippleria " + l.duration / 1e3 + "s " + l.easing),
            setTimeout(function() {
                e.remove()
            }
            , parseFloat(l.duration)),
            e.height() || e.width() || (n = Math.max(c.outerWidth(), c.outerHeight()),
            e.css({
                height: n,
                width: n
            })),
            1 == s) {
                var p = i.originalEvent.touches[0] || i.originalEvent.changedTouches[0];
                r = p.pageX - c.offset().left - e.width() / 2,
                a = p.pageY - c.offset().top - e.height() / 2
            } else
                r = i.pageX - c.offset().left - e.width() / 2,
                a = i.pageY - c.offset().top - e.height() / 2;
            e.css({
                top: a + "px",
                left: r + "px"
            })
        }
        )
    }
    ,
    n.prototype._prepare = function() {
        var t = this.$element;
        "static" == t.css("position") && t.css("position", "relative"),
        t.css("overflow", "hidden");
        var i = "block" == t.css("display") ? "block" : "inline-block";
        t.css("display", i),
        t.wrapInner("<div class='rippleria-wrap'></div>")
    }
    ,
    n.prototype._getOptionsFromElementAttributes = function() {
        var i = this;
        return attrs = {},
        t.each(n.Defaults, function(t, e) {
            var o = i.$element.attr("data-rippleria-" + t);
            null  != o && (attrs[t] = o)
        }
        ),
        attrs
    }
    ,
    n.prototype.changeColor = function(t) {
        this.options.color = t
    }
    ,
    n.prototype.changeEasing = function(t) {
        this.options.easing = t
    }
    ,
    n.prototype.changeDuration = function(t) {
        this.options.duration = t
    }
    ,
    n.Defaults = {
        duration: 750,
        easing: "linear",
        color: o
    },
    t.fn.rippleria = function(i) {
        var e = Array.prototype.slice.call(arguments, 1);
        return this.each(function() {
            var o = t(this)
              , r = o.data("rippleria");
            r || (r = new n(this,"object" == typeof i && i),
            o.data("rippleria", r)),
            "string" == typeof i && "_" !== i.charAt(0) && r[i].apply(r, e)
        }
        )
    }
    ,
    t(function() {
        t("[data-rippleria]").rippleria()
    }
    )
}
(window.jQuery, window, document);
